/* 
    1. Animation:
    Animate the logo with keyframes.
    It should start at a width of 25px and grow to 475px.
    It should also start with an opacity of 0 and end with an opacity of 1.
    The animation should take 5 seconds and only happen when the page is loaded. 
*/




/* 
    2. 
    Add poppins font family with serif backup
    Poppins is imported in the HTML
    “Poppins” must be in quotation marks - imported font
    Set “concrete_seamless.png” as a background-image with a backup color of #f1f1f1
*/
body {
    font-family: "Poppins", serif;
    background-image: url(../images/concrete_seamless.png);
    background-color: #f1f1f1;
}


/* 
    3. Update the header to match the screenshot of the page at 720px
    Use flex
*/
header {
    display: flex;
    flex-direction: column;
    align-items: center;
}

/* 
    4. Edit the css for the nav_links class to use flex to match our example. 
    Do not modify the list items or the links - modify the nav_links class to use flex.
*/
.nav_links {
    display: flex;
    flex-direction: column;
}
*/

/* 
    5. [to be revisited] Style the links so that they have the same color even after they have been visited.
*/
a, a:visited {
    color: inherit;
}


/*  
    6.
    Identify the proper selector to style ONLY those header elements that are direct children of a card class.  
    The required styling is the following: 
        a. background: #288088,
        b. solid 2px border using #45ADAD,
        c. 20px of padding on the top and the bottom, 
        d. 50px border-radius on the top left and right corners. 
    Check your work. The corners probably aren’t curving quite as you expected. 
    Use Inspect Element to fix this problem. You will need to utilize a second selector.
*/
.card > header {
    background-color: #288088;
    border: 2px solid #45ADAD;
    padding: 20px 0px;
    border-radius: 50px 50px 0px 0px;
}

.card {
    border-radius: 50px 50px 0px 0px;
}


/*
    7. 
    Edit the css for the card class to match our example.
    Achieve this by using a flex-property to specify an initial “size” of 450px.
    You need to think about this from a “flex” perspective and realize that flex-direction will affect the size of the elements.
    You can see that in the mobile view they all have the same width. 
*/
.card {
    display: flex;
    flex-basis: 450px; /* Initial size of 450px */
    flex-direction: column;
}


/*
    8. 
    Edit the css for the pricing class to match our example.
    You should use flex and the cards should be centered both horizontally and vertically.
*/
.pricing {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    align-content: center;
    justify-content: center;
}

/* 
    9.
    Style the images in the gallery class.
    These elements will have a solid 10px border with a color of #50C7C7, 10px margin on all four sides and a width of 300px.
*/
.gallery img {
    border: 10px solid #50C7C7;
    margin: 10px;
    width: 300px;
}

/*
    10.
    Edit the css for the gallery class to use flex to match our example. 
    (You may want to look at the screen shots from 1200px and 1500px as well -  
    the changes are not from media queries, but from the use of flex.)
*/
.gallery {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-content: stretch;
}

@media screen and (min-width: 900px) {
    header {
        flex-direction: row;
        flex-wrap: wrap;
        align-items: center;
        justify-content: space-between;
    };

    .nav_links {
        display: flex;
        flex-direction: row;
    }
}
